version: '3'
services:

  db:
    restart: always
    image: postgres:9.6-alpine
    networks:
      - internal_network
    volumes:
      - ./postgres:/var/lib/postgresql/data

  redis:
    restart: always
    image: redis:4.0-alpine
    networks:
      - internal_network
    volumes:
      - ./redis:/data

#  es:
#    restart: always
#    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.1.3
#    environment:
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    networks:
#      - internal_network
#    volumes:
#      - ./elasticsearch:/usr/share/elasticsearch/data

  web:
<<<<<<< HEAD
#    build: .
    image: zolexic/jorts-dot-horse:v2.6.12-J
=======
    build: .
    image: zolexic/jorts-dot-horse:v2.6.1-J
>>>>>>> d8ec5b05e38814b83a7c5d81bca7fdb9214b7043
    restart: always
    env_file: .env.production
    environment:
      - WEB_CONCURRENCY=1
      - MAX_THREADS=133
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000 -b '0.0.0.0'"
    networks:
      - external_network
      - internal_network
    ports:
      - "127.0.0.1:3000:3000"
    depends_on:
      - db
      - redis
#      - es
    volumes:
      - ./public/system:/mastodon/public/system
      - ./public/assets:/mastodon/public/assets
      - ./public/packs:/mastodon/public/packs

  streaming:
<<<<<<< HEAD
#    build: .
    image: zolexic/jorts-dot-horse:v2.6.12-J
=======
    build: .
    image: zolexic/jorts-dot-horse:v2.6.1-J
>>>>>>> d8ec5b05e38814b83a7c5d81bca7fdb9214b7043
    restart: always
    env_file: .env.production
    command: yarn start
    networks:
      - external_network
      - internal_network
    ports:
      - "127.0.0.1:4000:4000"
    depends_on:
      - db
      - redis

  sidekiq:
<<<<<<< HEAD
#    build: .
    image: zolexic/jorts-dot-horse:v2.6.12-J
=======
    build: .
    image: zolexic/jorts-dot-horse:v2.6.1-J
>>>>>>> d8ec5b05e38814b83a7c5d81bca7fdb9214b7043
    restart: always
    env_file: .env.production
    environment:
      - DB_POOL=266
    command: bundle exec sidekiq -c 133 -q default -q push -q mailers -q pull
    depends_on:
      - db
      - redis
    networks:
      - external_network
      - internal_network
    volumes:
      - ./public/system:/mastodon/public/system
      - ./public/packs:/mastodon/public/packs

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
       - /etc/letsencrypt/:/etc/letsencrypt/
       - ./public/:/home/mastodon/live/public
       - /usr/share/nginx/html:/usr/share/nginx/html
    restart: always
    depends_on:
      - web
      - streaming
    networks:
      - external_network
      - internal_network


## Uncomment to enable federation with tor instances along with adding the following ENV variables
## http_proxy=http://privoxy:8118
## ALLOW_ACCESS_TO_HIDDEN_SERVICE=true
#  tor:
#    build: https://github.com/usbsnowcrash/docker-tor.git
#    networks:
#      - external_network
#      - internal_network
#
#  privoxy:
#    build: https://github.com/usbsnowcrash/docker-privoxy.git
#    command: /opt/sbin/privoxy --no-daemon --user privoxy.privoxy /opt/config
#    volumes:
#      - ./priv-config:/opt/config
#    networks:
#      - external_network
#      - internal_network

networks:
  external_network:
  internal_network:
    internal: true
